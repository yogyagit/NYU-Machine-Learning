# -*- coding: utf-8 -*-
"""Q5 (hmm)

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1tPXVZZFOILQ5E67S1tm3XzASIwqiALOB
"""

import numpy as np

#declaring all the matrices
transitionMat = np.array([[0.8,0.2], [0.2,0.8]])
emissionMat = np.array([[0.4,0.1,0.3,0.2],[0.1,0.4,0.2,0.3]])
observationMat = np.array([1,4,2,2,3])

#function for all the calculations of HMM
def argMax(transitionMat, emissionMat, observationMat):

    transtionProb = len(transitionMat)
    emissionProb = len(observationMat)
    psi = np.zeros((emissionProb,transtionProb,transtionProb))
    phi = np.ones((transtionProb,emissionProb))
    
    #forward
    for i in range(1,emissionProb):
        obs = observationMat[i]
        psi[i,:,:] = np.matmul(np.diag(phi[:,i-1]),np.matmul(transitionMat,np.diag(emissionMat[:,obs-1])))
        phi[:,i] = np.amax(psi[i,:,:], axis = 0)
    
    #backward
    for i in reversed(range(emissionProb-2,0)):
        phiUpdated = np.amax(psi[i,:,:], axis = 0)
        psi[i,:,:] = np.matmul(psi[i,:,:],np.diag(np.divide(phiUpdated,phi[:,i])))
        phi[:,i] = phiUpdated
    
    #Predicting mood
    moodMat = np.zeros(5)
    for i in range(5):
        moodMat[i] = np.argmax(phi[:,i])

    mood = list()    
    for i in range(len(moodMat)):
        if (moodMat[i] == 0):
           mood.append('Happy')
        elif (moodMat[i] == 1):
           mood.append('Angry')
    
    print("Super Mario's mood accross 5 days", mood)

#function call
argMax(transitionMat, emissionMat, observationMat)